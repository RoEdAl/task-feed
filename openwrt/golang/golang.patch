diff --git a/lang/golang/golang-package.mk b/lang/golang/golang-package.mk
index cc00505..8edcb27 100644
--- a/lang/golang/golang-package.mk
+++ b/lang/golang/golang-package.mk
@@ -200,6 +200,7 @@ GO_PKG_TARGET_VARS= \
 	GO386="$(GO_386)" \
 	GOAMD64="$(GO_AMD64)" \
 	GOARM="$(GO_ARM)" \
+	GOARM64="$(GO_ARM64)" \
 	GOMIPS="$(GO_MIPS)" \
 	GOMIPS64="$(GO_MIPS64)" \
 	GOPPC64="$(GO_PPC64)" \
diff --git a/lang/golang/golang-values.mk b/lang/golang/golang-values.mk
index 727739e..fc85684 100644
--- a/lang/golang/golang-values.mk
+++ b/lang/golang/golang-values.mk
@@ -167,17 +167,30 @@ else ifeq ($(GO_ARCH),amd64)
   GO_AMD64:=v1
 
 else ifeq ($(GO_ARCH),arm)
-  GO_TARGET_FPU:=$(word 2,$(subst +,$(space),$(call qstrip,$(CONFIG_CPU_TYPE))))
-
-  # FPU names from https://gcc.gnu.org/onlinedocs/gcc-8.4.0/gcc/ARM-Options.html#index-mfpu-1
-  # see also https://github.com/gcc-mirror/gcc/blob/releases/gcc-8.4.0/gcc/config/arm/arm-cpus.in
+  GO_TARGET_CORE:=$(word 1,$(subst +,$(space),$(call qstrip,$(CONFIG_CPU_TYPE))))
+  ifneq ($(filter $(GO_TARGET_CORE),cortex-a7 cortex-a8 cortex-a9 cortex-a15),)
+    GO_ARM:=7
+  else
+    GO_TARGET_FPU:=$(word 2,$(subst +,$(space),$(call qstrip,$(CONFIG_CPU_TYPE))))
+
+    # FPU names from https://gcc.gnu.org/onlinedocs/gcc-8.4.0/gcc/ARM-Options.html#index-mfpu-1
+    # see also https://github.com/gcc-mirror/gcc/blob/releases/gcc-8.4.0/gcc/config/arm/arm-cpus.in
+
+    ifeq ($(GO_TARGET_FPU),)
+      GO_ARM:=5
+    else ifneq ($(filter $(GO_TARGET_FPU),vfp vfpv2),)
+      GO_ARM:=6
+    else
+      GO_ARM:=7
+    endif
+  endif
 
-  ifeq ($(GO_TARGET_FPU),)
-    GO_ARM:=5
-  else ifneq ($(filter $(GO_TARGET_FPU),vfp vfpv2),)
-    GO_ARM:=6
+else ifeq ($(GO_ARCH),arm64)
+  GO_TARGET_CORE:=$(word 1,$(subst +,$(space),$(call qstrip,$(CONFIG_CPU_TYPE))))
+  ifneq ($(filter $(GO_TARGET_CORE),cortex-a76),)
+    GO_ARM64:=v8.2,crypto
   else
-    GO_ARM:=7
+    GO_ARM64:=v8.0
   endif
 
 else ifneq ($(filter $(GO_ARCH),mips mipsle),)
diff --git a/lang/golang/golang/Makefile b/lang/golang/golang/Makefile
index d71cc7c..f8a3238 100644
--- a/lang/golang/golang/Makefile
+++ b/lang/golang/golang/Makefile
@@ -7,8 +7,8 @@
 
 include $(TOPDIR)/rules.mk
 
-GO_VERSION_MAJOR_MINOR:=1.23
-GO_VERSION_PATCH:=12
+GO_VERSION_MAJOR_MINOR:=1.25
+GO_VERSION_PATCH:=1
 
 PKG_NAME:=golang
 PKG_VERSION:=$(GO_VERSION_MAJOR_MINOR)$(if $(GO_VERSION_PATCH),.$(GO_VERSION_PATCH))
@@ -20,7 +20,7 @@ GO_SOURCE_URLS:=https://dl.google.com/go/ \
 
 PKG_SOURCE:=go$(PKG_VERSION).src.tar.gz
 PKG_SOURCE_URL:=$(GO_SOURCE_URLS)
-PKG_HASH:=e1cce9379a24e895714a412c7ddd157d2614d9edbe83a84449b6e1840b4f1226
+PKG_HASH:=d010c109cee94d80efe681eab46bdea491ac906bf46583c32e9f0dbb0bd1a594
 
 PKG_MAINTAINER:=Jeffery To <jeffery.to@gmail.com>
 PKG_LICENSE:=BSD-3-Clause
@@ -101,6 +101,12 @@ BOOTSTRAP_1_20_HASH:=1aef321a0e3e38b7e91d2d7eb64040666cabdcc77d383de3c9522d0d69b
 
 BOOTSTRAP_1_20_BUILD_DIR:=$(HOST_BUILD_DIR)/.go_bootstrap_1.20
 
+BOOTSTRAP_1_22_SOURCE:=go1.22.6.src.tar.gz
+BOOTSTRAP_1_22_SOURCE_URL:=$(GO_SOURCE_URLS)
+BOOTSTRAP_1_22_HASH:=9e48d99d519882579917d8189c17e98c373ce25abaebb98772e2927088992a51
+
+BOOTSTRAP_1_22_BUILD_DIR:=$(HOST_BUILD_DIR)/.go_bootstrap_1.22
+
 include $(INCLUDE_DIR)/host-build.mk
 include $(INCLUDE_DIR)/package.mk
 include ../golang-compiler.mk
@@ -111,6 +117,7 @@ HOST_UNPACK:=$(HOST_TAR) -C "$(HOST_BUILD_DIR)" --strip-components=1 -xzf "$(DL_
 BOOTSTRAP_UNPACK:=$(HOST_TAR) -C "$(BOOTSTRAP_BUILD_DIR)" --strip-components=1 -xzf "$(DL_DIR)/$(BOOTSTRAP_SOURCE)"
 BOOTSTRAP_1_17_UNPACK:=$(HOST_TAR) -C "$(BOOTSTRAP_1_17_BUILD_DIR)" --strip-components=1 -xzf "$(DL_DIR)/$(BOOTSTRAP_1_17_SOURCE)"
 BOOTSTRAP_1_20_UNPACK:=$(HOST_TAR) -C "$(BOOTSTRAP_1_20_BUILD_DIR)" --strip-components=1 -xzf "$(DL_DIR)/$(BOOTSTRAP_1_20_SOURCE)"
+BOOTSTRAP_1_22_UNPACK:=$(HOST_TAR) -C "$(BOOTSTRAP_1_22_BUILD_DIR)" --strip-components=1 -xzf "$(DL_DIR)/$(BOOTSTRAP_1_22_SOURCE)"
 
 # don't strip ELF executables in test data
 RSTRIP:=:
@@ -173,6 +180,7 @@ endef
 define Package/golang-src
 $(call Package/golang/Default)
   TITLE+= (source files)
+  DEPENDS+= +libstdcpp +libtiff
 endef
 
 define Package/golang-src/description
@@ -239,6 +247,23 @@ Hooks/HostPrepare/Post+=Bootstrap-1.20/Prepare
 
 $(eval $(call GoCompiler/AddProfile,Bootstrap-1.20,$(BOOTSTRAP_1_20_BUILD_DIR),,bootstrap-1.20,$(GO_HOST_OS_ARCH)))
 
+
+# Bootstrap 1.22
+
+define Download/golang-bootstrap-1.22
+  FILE:=$(BOOTSTRAP_1_22_SOURCE)
+  URL:=$(BOOTSTRAP_1_22_SOURCE_URL)
+  HASH:=$(BOOTSTRAP_1_22_HASH)
+endef
+$(eval $(call Download,golang-bootstrap-1.22))
+
+define Bootstrap-1.22/Prepare
+	mkdir -p "$(BOOTSTRAP_1_22_BUILD_DIR)" && $(BOOTSTRAP_1_22_UNPACK) ;
+endef
+Hooks/HostPrepare/Post+=Bootstrap-1.22/Prepare
+
+$(eval $(call GoCompiler/AddProfile,Bootstrap-1.22,$(BOOTSTRAP_1_22_BUILD_DIR),,bootstrap-1.22,$(GO_HOST_OS_ARCH)))
+
 # Host
 
 ifeq ($(GO_HOST_PIE_SUPPORTED),1)
@@ -267,6 +292,7 @@ endef
 define Host/Compile
 	$(call GoCompiler/Bootstrap/Make, \
 		$(HOST_GO_VARS) \
+		CC="$(HOSTCC_NOCACHE) -std=gnu17" \
 	)
 
 	$(call GoCompiler/Bootstrap-1.17/Make, \
@@ -279,8 +305,13 @@ define Host/Compile
 		$(HOST_GO_VARS) \
 	)
 
-	$(call GoCompiler/Host/Make, \
+	$(call GoCompiler/Bootstrap-1.22/Make, \
 		GOROOT_BOOTSTRAP="$(BOOTSTRAP_1_20_BUILD_DIR)" \
+		$(HOST_GO_VARS) \
+	)
+
+	$(call GoCompiler/Host/Make, \
+		GOROOT_BOOTSTRAP="$(BOOTSTRAP_1_22_BUILD_DIR)" \
 		$(if $(HOST_GO_ENABLE_PIE),GO_LDFLAGS="-buildmode pie") \
 		$(HOST_GO_VARS) \
 	)
